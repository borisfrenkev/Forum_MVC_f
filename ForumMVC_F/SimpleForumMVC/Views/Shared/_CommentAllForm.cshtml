@using SimpleForumMVC.Models
@model CommentSubmitModel

<div class="qa-c-list-item">
@if (Model.Comments!=null)
{
    foreach (var comment in Model.Comments)
{
    string commentId = "comment" + comment.Id;
    <div id="@commentId">
        <p>
            @comment.Content
        </p>
        <div class="a-c-item-footer">
            <span class="qa-c-item-avatar">
                <a class="qa-avatar-link" href="#">
                    <img class="qa-avatar-image" width="20" height="20" src="@Url.Action("GetImage", "User", new { username = comment.ApplicationUser.UserName })">
                </a>
            </span>
            <span class="qa-c-item-meta">
                @Html.ActionLink("commented", "Details", "Question", new { id = comment.Answer.QuestionId },
                new { @class = "qa-c-item-what" })
            </span>
            <span class="qa-q-view-when">
                <span class="qa-c-item-meta">
                    <span class="published">
                        @SimpleForumMVC.Models.HelperMethods.TimeHelpers.GetTimeDiff(comment.CreationDate)
                    </span>
                </span>
            </span>
            <span class="qa-q-view-who">
                <span class="qa-q-view-who-pad">by </span>
                <span class="qa-q-view-who-data">
                    <span class="vcard author">
                        <a class="qa-user-link url nickname" href="@Url.Action("UserActivity", "User", new { userName = comment.ApplicationUser.UserName })">@comment.ApplicationUser.UserName</a>
                    </span>
                </span>
            </span>
        </div>
        <div class="qa-q-view-buttons">
            @if (User.Identity.IsAuthenticated && User.Identity.Name == comment.ApplicationUser.UserName)
            {
                @Ajax.ActionLink("edit", "CommentFormEdit", "Comment", new { commentId = comment.Id, targetId = commentId },
                        new AjaxOptions
                        {
                            UpdateTargetId = commentId,
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET"
                        },
                        new { @class = "qa-form-light-button" })
            }
        </div>
    </div>
    }
}

    @using (Ajax.BeginForm("InputComment", "Comment",
    new AjaxOptions
    {
        InsertionMode = InsertionMode.Replace,
        HttpMethod = "Post",
        UpdateTargetId = Model.TargetId
    }))
    {
        <div class="control-group">
            @Html.LabelFor(model => model.CommentContent, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.CommentContent)
                @Html.ValidationMessageFor(model => model.CommentContent, null, new { @class = "help-inline" })
            </div>
        </div>

        @Html.HiddenFor(model => model.AnswerId)
        @Html.HiddenFor(model => model.TargetId)
        <input type="submit" value="Submit Commnet" />
        @Ajax.ActionLink("cancel", "InputCancelComment", "Comment", new { answerId = Model.AnswerId },
                        new AjaxOptions
                        {
                            UpdateTargetId = Model.TargetId,
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET"
                        },
                        new { @class = "qa-form-light-button" })

    }
</div>